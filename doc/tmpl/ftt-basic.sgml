<!-- ##### SECTION Title ##### -->
Basic structure and properties

<!-- ##### SECTION Short_Description ##### -->


<!-- ##### SECTION Long_Description ##### -->
<para>

</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### STRUCT FttCell ##### -->
<para>

</para>

@flags: 
@data: 

<!-- ##### ENUM FttCellFlags ##### -->
<para>

</para>

@FTT_FLAG_ID: 
@FTT_FLAG_DESTROYED: 
@FTT_FLAG_LEAF: 
@FTT_FLAG_TRAVERSED: 
@FTT_FLAG_USER: 

<!-- ##### STRUCT FttVector ##### -->
<para>

</para>

@x: 
@y: 
@z: 

<!-- ##### MACRO FTT_CELL_IS_ROOT ##### -->
<para>
Evaluates to %TRUE if @c does not have any parent, %FALSE otherwise.
</para>

@c: a #FttCell.


<!-- ##### MACRO FTT_CELL_IS_LEAF ##### -->
<para>
Evaluates to %TRUE if @c does not have any children, %FALSE otherwise.
</para>

@c: a #FttCell.


<!-- ##### MACRO FTT_MAINTAINER ##### -->
<para>

</para>



<!-- ##### FUNCTION ftt_cell_new ##### -->
<para>

</para>

@init: 
@data: 
@Returns: 


<!-- ##### USER_FUNCTION FttCellInitFunc ##### -->
<para>
This function is used to initialize extra user data associated with @cell. For example to allocate extra memory, initialize user-defined variables etc...
</para>

@cell: a #FttCell.
@data: user-data passed to the function.


<!-- ##### FUNCTION ftt_cell_copy ##### -->
<para>

</para>

@root: 
@copy: 
@data: 
@Returns: 


<!-- ##### USER_FUNCTION FttCellCopyFunc ##### -->
<para>

</para>

@from: 
@to: 
@data: 


<!-- ##### FUNCTION ftt_cell_refine ##### -->
<para>

</para>

@root: 
@refine: 
@refine_data: 
@init: 
@init_data: 


<!-- ##### FUNCTION ftt_cell_refine_single ##### -->
<para>

</para>

@cell: 
@init: 
@init_data: 


<!-- ##### USER_FUNCTION FttCellRefineFunc ##### -->
<para>
This function is used to control the refinement process of a cell tree.
</para>

@cell: a #FttCell.
@data: user-data passed to the function.
@Returns: %TRUE if @cell must be refined, %FALSE otherwise.


<!-- ##### FUNCTION ftt_refine_corner ##### -->
<para>

</para>

@cell: 
@Returns: 


<!-- ##### FUNCTION ftt_cell_refine_corners ##### -->
<para>

</para>

@cell: 
@init: 
@data: 


<!-- ##### USER_FUNCTION FttCellCoarsenFunc ##### -->
<para>

</para>

@cell: 
@data: 
@Returns: 


<!-- ##### FUNCTION ftt_cell_coarsen ##### -->
<para>

</para>

@root: 
@coarsen: 
@coarsen_data: 
@cleanup: 
@cleanup_data: 
@Returns: 
<!-- # Unused Parameters # -->
@data: 


<!-- ##### FUNCTION ftt_cell_flatten ##### -->
<para>

</para>

@root: 
@d: 
@cleanup: 
@data: 


<!-- ##### FUNCTION ftt_cell_check ##### -->
<para>

</para>

@cell: 
@Returns: 


<!-- ##### FUNCTION ftt_cell_destroy ##### -->
<para>

</para>

@cell: 
@cleanup: 
@data: 


<!-- ##### FUNCTION ftt_cell_destroy_root ##### -->
<para>

</para>

@root: 
@children: 
@cleanup: 
@data: 


<!-- ##### USER_FUNCTION FttCellCleanupFunc ##### -->
<para>
Performs any cleanup action needed for the user data associated with @cell prior to its destruction (example: freeing extra memory allocated at cell creation using a #FttCellInitFunc function).
</para>

@cell: a #FttCell about to be destroyed.
@data: 


<!-- ##### MACRO ftt_cell_level ##### -->
<para>
Evaluates to the level of @c.
</para>

@c: a #FttCell.


<!-- ##### FUNCTION ftt_cell_set_level ##### -->
<para>

</para>

@root: 
@level: 


<!-- ##### FUNCTION ftt_cell_pos ##### -->
<para>

</para>

@cell: 
@pos: 


<!-- ##### FUNCTION ftt_cell_relative_pos ##### -->
<para>

</para>

@cell: 
@pos: 


<!-- ##### FUNCTION ftt_cell_set_pos ##### -->
<para>

</para>

@root: 
@pos: 


<!-- ##### FUNCTION ftt_corner_pos ##### -->
<para>

</para>

@cell: 
@d: 
@pos: 


<!-- ##### FUNCTION ftt_corner_relative_pos ##### -->
<para>

</para>

@cell: 
@d: 
@pos: 


<!-- ##### FUNCTION ftt_level_size ##### -->
<para>

</para>

@level: 
@Returns: 


<!-- ##### FUNCTION ftt_cell_size ##### -->
<para>

</para>

@cell: 
@Returns: 


<!-- ##### FUNCTION ftt_cell_volume ##### -->
<para>

</para>

@cell: 
@Returns: 


<!-- ##### MACRO ftt_cell_parent ##### -->
<para>
Evaluates to the parent of @c. %NULL is @c is a root cell.
</para>

@c: a #FttCell.


<!-- ##### FUNCTION ftt_cell_depth ##### -->
<para>

</para>

@root: 
@Returns: 


<!-- ##### MACRO ftt_vector_norm ##### -->
<para>

</para>

@v: 


