<!-- ##### SECTION Title ##### -->
Generic output event

<!-- ##### SECTION Short_Description ##### -->
Writing simulation data

<!-- ##### SECTION Long_Description ##### -->
<para>
This generic object is a #GfsEvent which also defines where to write the data to output.
</para>
<para>
The syntax in parameter files is as follows:
<informalexample>
<programlisting>
[ #GfsEvent ] FILE
</programlisting>
</informalexample>
where FILE is either a string defining the file in which to write the output, or a shell-script enclosed within braces to which the output will be piped. Two file names have special meaning: "stderr" and "stdout" for the standard error and standard output respectively.
</para>
<para>
If a C-like formatting string appears in the file name, it is interpreted as follows:
<informaltable pgwide="1" frame="none" role="struct">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>

<row>
<entry>%%d</entry>
<entry>is replaced with the current processor number.</entry>
</row>

<row>
<entry>%%ld</entry>
<entry>is replaced with the current time step number.</entry>
</row>

<row>
<entry>%%f</entry>
<entry>is replaced with the current physical time.</entry>
</row>

</tbody></tgroup></informaltable>
Note that most of the C language format specifiers are recognized (i.e. it is possible to use formatting strings like %%05.2f etc...).
</para>
<para>
If the simulation does not start at time zero the existing files are appended otherwise they are overwritten.
</para>
<para>
The "pipe" feature of GfsOutput can for example be used to do on-the-flight post-processing of the data stream, as in the following example:
<informalexample>
<programlisting>
  GfsOutputPPM { istep = 1 } { ppmtoy4m -v 0 -F 24:1 | mpeg2enc -v 0 -o vorticity.mpg } { v = Vorticity }
</programlisting>
</informalexample>
which will convert the PPM stream generated by #GfsOutputPPM directly to MPEG using the MJPEG tools collection.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### MACRO GFS_OUTPUT_CLASS ##### -->
<para>

</para>

@klass: 


<!-- ##### MACRO GFS_OUTPUT ##### -->
<para>

</para>

@obj: 


<!-- ##### MACRO GFS_IS_OUTPUT ##### -->
<para>

</para>

@obj: 


<!-- ##### STRUCT GfsOutputClass ##### -->
<para>

</para>

@parent_class: 

<!-- ##### STRUCT GfsOutput ##### -->
<para>

</para>

@parent: 
@file: 
@format: 
@formats: 
@dynamic: 

<!-- ##### STRUCT GfsOutputFile ##### -->
<para>

</para>

@refcount: 
@name: 
@fp: 

<!-- ##### FUNCTION gfs_output_class ##### -->
<para>

</para>

@Returns: 


<!-- ##### FUNCTION gfs_output_mute ##### -->
<para>

</para>

@output: 


<!-- ##### FUNCTION gfs_output_file_close ##### -->
<para>

</para>

@file: 


<!-- ##### FUNCTION gfs_output_file_open ##### -->
<para>

</para>

@name: 
@mode: 
@Returns: 


