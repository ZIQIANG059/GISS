# Title: Circular droplet in equilibrium
#
# Description:
#
# A circular droplet of diameter $D=0.8$ is initialised centered on
# the top-left corner of the unit box. Surface tension is imposed on
# the interface. The exact solution is given by Laplace's law: uniform
# zero velocity and a pressure jump accross the interface exactly
# balancing the surface tension force.
#
# The initial condition -- while close to the exact solution -- does
# not guarantee the exact balance between the numerical
# discretisations of surface tension and pressure gradient. However,
# these small initial perturbations generate small capillary waves
# which are progressively (on a timescale of order $D^2/\mu$) damped
# by viscosity so that the exact (to round-off error) balance is
# eventually obtained.
#
# The convergence is obtained for a wide range of Laplace numbers
# $La=\sigma\rho D/\mu^2$, as illustrated on Figure \ref{laplace}.
#
# \begin{figure}[htbp]
# \begin{center}
# \includegraphics[width=0.6\hsize]{vectors.eps}
# \end{center}
# \caption{Spurious currents at equilibrium for $La=12000$.}
# \label{vectors}
# \end{figure}
#
# \begin{figure}[htbp]
# \caption{\label{laplace}Evolution of the capillary number $Ca$ as a function of
# non-dimensional time $\tau=t\sigma/(\mu D)$ for the range of Laplace
# numbers indicated in the legend.}
# \begin{center}
# \includegraphics[width=0.8\hsize]{laplace.eps}
# \end{center}
# \caption{Evolution of the capillary number $Ca$ as a function of
# non-dimensional time $\tau=t\sigma/(\mu D)$ for the range of Laplace
# numbers indicated in the legend.}
# \label{laplace}
# \end{figure}
#
# \begin{figure}[htbp]
# \caption{\label{convergence}Poor convergence of the capillary number with increased
# resolution. The diameter is given in number of grid points.}
# \begin{center}
# \includegraphics[width=0.8\hsize]{convergence.eps}
# \end{center}
# \caption{Poor convergence of the capillary number with increased
# resolution. The diameter is given in number of grid points.}
# \label{convergence}
# \end{figure}
#
# Author: St\'ephane Popinet
# Command: sh spurious.sh spurious.gfs
# Version: 1.0.0
# Required files: spurious.sh convergence.ref
# Generated files: laplace.eps convergence.eps
#
1 0 GfsSimulation GfsBox GfsGEdge {} {
  Time { end = TMAX }
  Refine LEVEL
  RefineSurface 10 circle.gts

  ApproxProjectionParams { tolerance = 1e-6 }
  ProjectionParams { tolerance = 1e-6 }
  AdvectionParams { scheme = none }

  VariableTracer {} T { scheme = vof }
  VariableCurvature {} K T
  SourceTension {} T 1 K
  SourceDiffusion {} U MU
  SourceDiffusion {} V MU

  InitFraction {} T circle.gts
  Init {} { Tref = T }

  AdaptGradient { istep = 1 } { cmax = 1e-6 maxlevel = LEVEL } T
  EventStop { istep = 10 } T DT

  OutputSimulation { start = end } stdout { depth = LEVEL }
  OutputScalarNorm { istep = 1 } {
    awk '{ print MU*$3/(0.8*0.8) " " $9*sqrt(0.8) }' > La-LAPLACE-LEVEL
  } { v = Velocity }
  OutputScalarNorm { istep = 1 } {
    awk '{ print MU*$3/(0.8*0.8) " " $5 " " $7 " " $9 }' > E-LAPLACE-LEVEL
  } { v = (Tref - T) }
}
GfsBox {
  top = Boundary
  left = Boundary
}
