# Title: Coastally-trapped waves
#
# Description:
#
# A simulation is initialised with an exact solution found by Lamb
# \cite{lamb} for inertia-gravity waves in a circular, flat-bottomed
# basin on an $f$-plane.
#
# The waves should rotate unchanged around the basin. This is a good
# test of the shallow-water solver with Coriolis terms and non-trivial
# coastlines.
#
# Figure \ref{solution} illustrates the solution obtained after three
# wave periods.
#
# Following \cite{rutgers-waves}, Table \ref{correlation} presents the
# phase error and the maximum correlation between the computed
# solution and the exact solution. Note that these results are not
# directly comparable to \cite{rutgers-waves}, because the timestep
# used is much larger. The time-explicit codes tested in
# \cite{rutgers-waves} have stronger stability requirements than
# Gerris.
#
# \begin{figure}[htbp]
# \begin{center}
# \includegraphics[width=0.6\hsize]{solution.eps}
# \end{center}
# \caption{Surface-height after a rotation of 3 wave periods for a
# resolution of 9.375 km.}
# \label{solution}
# \end{figure}
#
# \begin{table}[htbp]
# \begin{center}
# \input{correlation.tex}
# \end{center}
# \caption{Maximum correlation and phase error as functions of resolution.}
# \label{correlation}
# \end{table}
#
# Author: St\'ephane Popinet
# Command: sh waves.sh waves.gfs
# Version: 0.8.0
# Required files: waves.sh solution.gfv correlation.ref
# Generated files: correlation correlation.tex solution.eps
#
1 0 GfsOcean GfsBox GfsGEdge {} {
  Time { end = 37.80501984 dtmax = 0.1 }
  PhysicalParams { g = 5.87060327757e-3 }
  Init {} {
    P = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x);
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    U = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      @define Ik(k,r,D) (gsl_sf_bessel_Inu ((k) - 1., (r)/(D))/(D)\
                          - (k)/(r)*gsl_sf_bessel_Inu ((k), (r)/(D)))
      double theta = atan2(y,x);
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double sigma = 0.4986;
      double A = 1./2555510.;
      double ur = -A*D*D/5.87060327757e-3*sin (k*theta)*(sigma*Ik (k, r, D) - 
        	                                               k/r*gsl_sf_bessel_Inu (k, r/D));
      double vt =  A*D*D/5.87060327757e-3*cos (k*theta)*(Ik (k, r, D) - 
       	                                               k*sigma/r*gsl_sf_bessel_Inu (k, r/D));
      return ur*cos (theta) - vt*sin (theta);
    }
    V = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      @define Ik(k,r,D) (gsl_sf_bessel_Inu ((k) - 1., (r)/(D))/(D)\
                          - (k)/(r)*gsl_sf_bessel_Inu ((k), (r)/(D)))
      double theta = atan2(y,x);
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double sigma = 0.4986;
      double A = 1./2555510.;
      double ur = -A*D*D/5.87060327757e-3*sin (k*theta)*(sigma*Ik (k, r, D) - 
        	                                               k/r*gsl_sf_bessel_Inu (k, r/D));
      double vt =  A*D*D/5.87060327757e-3*cos (k*theta)*(Ik (k, r, D) - 
        	                                               k*sigma/r*gsl_sf_bessel_Inu (k, r/D));
      return ur*sin (theta) + vt*cos (theta);
    }
    H = 1
  }
  Refine LEVEL
  GtsSurfaceFile basin.gts
  AdvectionParams { scheme = none }
  ApproxProjectionParams { tolerance = 1e-9 weighted = 0 }
  SourceCoriolis {} 1.
  EventScript { start = end } { echo -n "-30 " }
  EventFilter { istep = 1 } U 4
  EventFilter { istep = 1 } V 4
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -30*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-29 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -29*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-28 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -28*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-27 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -27*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-26 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -26*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-25 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -25*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-24 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -24*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-23 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -23*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-22 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -22*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-21 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -21*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-20 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -20*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-19 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -19*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-18 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -18*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-17 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -17*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-16 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -16*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-15 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -15*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-14 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -14*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-13 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -13*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-12 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -12*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-11 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -11*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-10 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -10*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-9 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -9*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-8 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -8*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-7 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -7*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-6 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -6*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-5 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -5*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-4 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -4*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-3 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -3*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-2 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -2*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "-1 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + -1*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "0 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 0*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "0.1 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 0.1*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "0.2 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 0.2*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "0.3 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 0.3*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "0.4 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 0.4*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "0.5 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 0.5*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "0.6 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 0.6*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "0.7 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 0.7*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "0.8 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 0.8*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "0.9 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 0.9*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "1 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 1*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "1.1 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 1.1*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "1.2 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 1.2*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "1.3 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 1.3*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "1.4 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 1.4*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "1.5 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 1.5*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "1.6 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 1.6*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "1.7 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 1.7*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "1.8 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 1.8*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "1.9 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 1.9*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "2 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 2*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "2.1 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 2.1*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "2.2 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 2.2*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "2.3 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 2.3*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "2.4 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 2.4*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "2.5 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 2.5*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "2.6 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 2.6*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "2.7 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 2.7*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "2.8 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 2.8*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "2.9 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 2.9*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "3 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 3*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "3.1 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 3.1*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "3.2 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 3.2*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "3.3 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 3.3*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "3.4 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 3.4*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "3.5 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 3.5*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "3.6 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 3.6*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "3.7 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 3.7*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "3.8 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 3.8*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "3.9 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 3.9*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "4 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 4*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "4.1 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 4.1*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "4.2 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 4.2*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "4.3 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 4.3*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "4.4 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 4.4*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "4.5 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 4.5*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "4.6 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 4.6*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "4.7 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 4.7*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "4.8 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 4.8*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "4.9 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 4.9*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "5 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 5*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "6 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 6*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "7 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 7*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "8 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 8*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "9 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 9*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "10 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 10*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "11 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 11*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "12 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 12*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "13 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 13*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "14 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 14*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "15 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 15*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "16 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 16*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "17 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 17*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "18 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 18*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "19 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 19*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "20 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 20*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "21 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 21*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "22 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 22*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "23 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 23*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "24 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 24*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "25 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 25*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "26 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 26*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "27 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 27*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "28 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 28*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "29 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 29*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  EventScript { start = end } { echo -n "30 " }
  OutputCorrelation { start = end } stdout { v = P } {
    s = {
      @include <gsl/gsl_sf_bessel.h>
      @link -lgsl -lgslcblas
      double theta = atan2(y,x) + 30*M_PI/180.;
      double r = sqrt (x*x + y*y);
      double D = 8.83906519983e-2;
      double k = 3.;
      double A = 1./2555510.;
      return A*cos (k*theta)*gsl_sf_bessel_Inu (k, r/D);
    }
    unbiased = 1
  }
  OutputSimulation { start = end } sim-LEVEL {}
}
GfsBox {}
