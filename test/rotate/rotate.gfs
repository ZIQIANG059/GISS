# Title: Rotation of a straight interface
#
# Description:
#
# A straight interface is advected by a pure shear flow. The exact
# solution is simply a rotation of the interface around the center of
# the box. Note that both the interface and the velocity field should
# be described exactly by a second-order method.
#
# Figure \ref{evolution} illustrates what happens when using a VOF
# scheme to follow the interface. The errors are due to the
# first-order estimation of the fluxes (i.e. second-order for the VOF
# interface reconstruction but only first-order for the velocity
# field). A levelset method would not suffer from the same problem
# (green line on Figure \ref{evolution}).
#
# Figure \ref{error} illustrates the evolution of the error with
# time. For $t=1$ the interface is at 45 degrees and the errors in
# fluxes cancel out exactly.
#
# \begin{figure}[htbp] 
# \caption{\label{evolution}Evolution of the VOF interface (blue) in a
# shear flow. The red line is the exact solution. The green line is
# the zero-levelset of a distance function. (a) $t=0$, (b)
# $t=1$, (c) $t=2$, (d) $t=5$.}
# \begin{center}
# \begin{tabular}{cc}
# (a) \includegraphics[width=0.45\hsize]{rotate-0.eps} &
# (b) \includegraphics[width=0.45\hsize]{rotate-1.eps} \\
# (c) \includegraphics[width=0.45\hsize]{rotate-2.eps} &
# (d) \includegraphics[width=0.45\hsize]{rotate-5.eps}
# \end{tabular}
# \end{center}
# \end{figure}
#
# \begin{figure}[htbp] 
# \caption{\label{error}Volume fraction error as a function of time.}
# \begin{center}
# \includegraphics[width=0.8\hsize]{error.eps}
# \end{center}
# \end{figure}
#
# Author: St\'ephane Popinet
# Command: gerris2D rotate.gfs
# Version: 110920
# Required files: rotate.gfv
# Running time: 1 second
# Generated files: error.eps rotate-0.eps rotate-1.eps rotate-2.eps rotate-5.eps
#
1 0 GfsAdvection GfsBox GfsGEdge {} {
    PhysicalParams { L = 2. }
    Refine 3
    VariableTracerVOF T
    VariableTracer D
    Init {} {
	U = y
	D = x
    }
    InitFraction T (x - 1e-4)
    Variable Tref
    InitFraction { istep = 1 } Tref (x - t*y)
    OutputScalarNorm { istep = 1 } error { v = (T - Tref) }
    Time { end = 5 }
    GModule gfsview
    OutputView { step = 1 } rotate-%g.eps { format = EPS } rotate.gfv
    EventScript { start = end } {
	gnuplot <<EOF
set term postscript eps color lw 3 18
set output 'error.eps'
set ylabel 'Maximum volume fraction error'
set xlabel 'Time'
unset key
plot 'error' u 3:9 w l
EOF
    }
}
GfsBox {
    left = Boundary { BcDirichlet U y }
    right = Boundary { BcDirichlet U y }
    top = Boundary { BcDirichlet U y }
    bottom = Boundary { BcDirichlet U y }
}
